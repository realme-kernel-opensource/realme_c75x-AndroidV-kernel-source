/* Copyright (c) 2018, The Linux Foundation. All rights reserved.
 *
 * This program is free software; you can redistribute it and/or modify
 * it under the terms of the GNU General Public License version 2 and
 * only version 2 as published by the Free Software Foundation.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 */

/* accdet start */
&accdet {
	/* accdet micbias voltage: 0x07,2.7v;0x05,2.5v;0x02,1.9v */
	accdet-mic-vol = <7>;
	headset-mode-setting = <0x500 0x500 1 0x1f0 0x800 0x800 0x20 0x44>;
	accdet-plugout-debounce = <1>;
	/*1:ACC mode, 2:low cost without in bias, 6:low cost with in bias*/
	accdet-mic-mode = <1>;
	/* eint_level_trigger: 8,LEVEL_LOW(DEF) ;4,LV_HIGH;others,LV_LOW */
	headset-eint-level-pol = <8>;
//#ifdef OPLUS_BUG_COMPATIBILITY
	headset-eint-comparator = <8>;
//#endif
	/*0--MD_MAX--UP_MAX--DW_MAX*/
	headset-three-key-threshold = <0 82 170 306>;
	headset-three-key-threshold-CDD = <0 121 192 600>;
	/*0--MD_MAX--VOICE_MAX--UP_MAX--DW_MAX*/
	headset-four-key-threshold = <0 58 121 192 400>;
	status = "okay";
};
/* accdet end */

&i2c0 {
	#address-cells = <1>;
	#size-cells = <0>;
	clock-frequency = <400000>;
	mediatek,use-open-drain;

	sia81xx_i2c_L: sia81xx_i2c@L {
		compatible = "si,sia81xx-i2c";
		reg = <0x29>;
		si,sipa-dev = <&sia81xx_L>;
	};

	sia81xx_i2c_R: sia81xx_i2c@R {
		compatible = "si,sia81xx-i2c";
		reg = <0x28>;
		si,sipa-dev = <&sia81xx_R>;
	};

	/* AWINIC AW87XXX Smart K PA */
	aw87xxx_pa_5B@5B {
		compatible = "awinic,aw87xxx_pa_2_x_0";
		reg = <0x5B>;
		/*oplus-real-addr = <0x5B>;*/
		reset-gpio = <&pio 160 0>;
		dev_index = < 0 >;
		status = "okay";
	};

	aw87xxx_pa_58@58 {
		compatible = "awinic,aw87xxx_pa_2_x_0";
		reg = <0x58>;
		/*oplus-real-addr = <0x59>;*/
		reset-gpio = <&pio 153 0>;
		dev_index = < 1 >;
		status = "okay";
	};
/* AWINIC AW87XXX Smart K PA End */
};

&mt6358codec {
	mtk_pull_down_stay_enable = <1>;
	/* this dtsi config for product's special config, AudioHal read ctl 'OPLUS_AUDIO_EXTERN_CONFIG' get the values*
	 * 1st value --> PA type: 0:NXP Pa, 1:Awinic Pa 2:sia81xx Pa*/
	audio_extern_config = <0>;
	/* this dtsi config for product's special config,Audio PA compatible*
	 * 1 means PA compatible. 0 means no PA compatible  */
	audio_compatible = <1>;
};
/*
&audio_extend {
	//for sipa speaker
	oplus,speaker-vendor = "sipa";
	oplus,speaker-i2s-id = <3>;
	oplus,speaker-i2s-id-in = <0>;
	oplus,speaker-codec-name = "sipa_i2c.0-0029","sipa_i2c.0-0028";
	oplus,speaker-codec-dai-name = "sia91xx-aif-0-29","sia91xx-aif-0-28";
	oplus,spk-i2s-index = <3 0>;
};
*/
&pio {
	sia81xx_gpio_L: sia81xx_gpio_L {
		pins_cmd_dat {
			pinmux = <PINMUX_GPIO160__FUNC_GPIO160>;
			slew-rate = <1>;
			bias-disable;
		};
	};

	sia81xx_gpio_R: sia81xx_gpio_R {
		pins_cmd_dat {
			pinmux = <PINMUX_GPIO153__FUNC_GPIO153>;
			slew-rate = <1>;
			bias-disable;
		};
	};
};

&odm {
	sia81xx_L: sia81xx@L {
		compatible = "si,sia81xx";
		si,si_pa_type = "sia8159";
		si,si_pa_reset = <&pio 160 0>;
		si,si_pa_owi = <&pio 160 0>;
		pinctrl-names = "sia81xx_gpio";
		pinctrl-0 = <&sia81xx_gpio_L>;
		si,si_pa_disable_pin = <1>;
		/* the same value share a same task
		 * valid value range : 0 ~ 7 */
		timer_task_hdl = <0>;
		en_peak_current_limit = <1>;
                si,is_analog_pa= <1>;
		channel_num = <0>;
		owi_mode = <6>;
		en_x_filter = <0>;
		en_dynamic_updata_vdd = <0>;
		en_dynamic_updata_pvdd = <0>;
		dynamic_updata_vdd_port = <0x2>;
	        sipa_min_range = <5000>;
	        sipa_max_range = <7800>;	
	};
	sia81xx_R: sia81xx@R {
		compatible = "si,sia81xx";
		si,si_pa_type = "sia8159";
		si,si_pa_reset = <&pio 153 0>;
		si,si_pa_owi = <&pio 153 0>;
		pinctrl-names = "sia81xx_gpio";
		pinctrl-0 = <&sia81xx_gpio_R>;
		si,si_pa_disable_pin = <1>;
		/* the same value share a same task
		* valid value range : 0 ~ 7 */
		timer_task_hdl = <0>;
		en_peak_current_limit = <1>;
                si,is_analog_pa = <1>;
		channel_num = <1>;
		owi_mode = <6>;
		en_x_filter = <0>;
		en_dynamic_updata_vdd = <0>;
		en_dynamic_updata_pvdd = <0>;
		dynamic_updata_vdd_port = <0x2>;
		sipa_min_range = <5000>;
	        sipa_max_range = <7800>;
	};
};

&sound {
	si,sia81xx-max-num = <2>;
	si,sia81xx-aux-devs = <&sia81xx_L>, <&sia81xx_R>;
	si,sia81xx-aux-devs-prefix = "SpkrLeft", "SpkrRight";
        si,is_analog_pa= <1>;
};


