/* SPDX-License-Identifier: GPL-2.0 */
/*
 * Copyright (C) 2020 MediaTek Inc.
 */

#ifndef _HF_SENSOR_TYPE_H_
#define _HF_SENSOR_TYPE_H_

enum {
	SENSOR_TYPE_INVALID = 0,
	/* follow google default sensor type */
	SENSOR_TYPE_ACCELEROMETER = 1,
	SENSOR_TYPE_MAGNETIC_FIELD,
	SENSOR_TYPE_ORIENTATION,
	SENSOR_TYPE_GYROSCOPE,
	SENSOR_TYPE_LIGHT,
	SENSOR_TYPE_PRESSURE,
	SENSOR_TYPE_TEMPERATURE,
	SENSOR_TYPE_PROXIMITY,
	SENSOR_TYPE_GRAVITY,
	SENSOR_TYPE_LINEAR_ACCELERATION,
	SENSOR_TYPE_ROTATION_VECTOR,
	SENSOR_TYPE_RELATIVE_HUMIDITY,
	SENSOR_TYPE_AMBIENT_TEMPERATURE,
	SENSOR_TYPE_MAGNETIC_FIELD_UNCALIBRATED,
	SENSOR_TYPE_GAME_ROTATION_VECTOR,
	SENSOR_TYPE_GYROSCOPE_UNCALIBRATED,
	SENSOR_TYPE_SIGNIFICANT_MOTION,
	SENSOR_TYPE_STEP_DETECTOR,
	SENSOR_TYPE_STEP_COUNTER,
	SENSOR_TYPE_GEOMAGNETIC_ROTATION_VECTOR,
	SENSOR_TYPE_HEART_RATE,
	SENSOR_TYPE_TILT_DETECTOR,
	SENSOR_TYPE_WAKE_GESTURE,
	SENSOR_TYPE_GLANCE_GESTURE,
	SENSOR_TYPE_PICK_UP_GESTURE,
	SENSOR_TYPE_WRIST_TILT_GESTURE,
	SENSOR_TYPE_DEVICE_ORIENTATION,
	SENSOR_TYPE_POSE_6DOF,
	SENSOR_TYPE_STATIONARY_DETECT,
	SENSOR_TYPE_MOTION_DETECT,
	SENSOR_TYPE_HEART_BEAT,
	SENSOR_TYPE_DYNAMIC_SENSOR_META,
	SENSOR_TYPE_ADDITIONAL_INFO,
	SENSOR_TYPE_LOW_LATENCY_OFFBODY_DETECT,
	SENSOR_TYPE_ACCELEROMETER_UNCALIBRATED,

	/* follow mtk add sensor type */
	SENSOR_TYPE_PEDOMETER = 55,
	SENSOR_TYPE_IN_POCKET,
	SENSOR_TYPE_ACTIVITY,
	SENSOR_TYPE_PDR,
	SENSOR_TYPE_FREEFALL,
	SENSOR_TYPE_FLAT,
	SENSOR_TYPE_FACE_DOWN,
	SENSOR_TYPE_SHAKE,
	SENSOR_TYPE_BRINGTOSEE,
	SENSOR_TYPE_ANSWER_CALL,
	SENSOR_TYPE_GEOFENCE,
	SENSOR_TYPE_FLOOR_COUNTER,
	SENSOR_TYPE_EKG,
	SENSOR_TYPE_PPG1,
	SENSOR_TYPE_PPG2,
	SENSOR_TYPE_RGBW,
	SENSOR_TYPE_GYRO_TEMPERATURE,
	SENSOR_TYPE_SAR,
	SENSOR_TYPE_OIS,
	SENSOR_TYPE_GYRO_SECONDARY,
#ifdef CONFIG_OPLUS_FEATURE_SENSOR_ALGORITHM
        OPLUS_VIRTUAL_SENSOR_START = 76,
	SENSOR_TYPE_CAMERA_PROTECT = OPLUS_VIRTUAL_SENSOR_START,
	SENSOR_TYPE_FREE_FALL,
	SENSOR_TYPE_PICKUP_DETECT,
	SENSOR_TYPE_FP_DISPLAY,
	SENSOR_TYPE_SAR_MODEM,
	SENSOR_TYPE_LUX_AOD,
	SENSOR_TYPE_PEDO_MINUTE,
	SENSOR_TYPE_OPLUS_ACTIVITY_RECOGNITION = 84,
	SENSOR_TYPE_ELEVATOR_DETECT = 86,
	SENSOR_TYPE_SENSOR_MONITOR,
	SENSOR_TYPE_ROTATION_DETECT=88,
	SENSOR_TYPE_BACK_TAP_DETECT=89,
	SENSOR_TYPE_LAY_DETECT = 90,
	SENSOR_TYPE_PALM_DETECT = 91,
	SENSOR_TYPE_PHONE_PROX,
	SENSOR_TYPE_GESTURE_PROX,
	SENSOR_TYPE_AMBIENTE_PROX,
	SENSOR_TYPE_FRONT_CCT = 95,
	SENSOR_TYPE_FRONT_FLICKER = 96,
	SENSOR_TYPE_RAW_MAG = 97,
	SENSOR_TYPE_REAR_ALS,
	SENSOR_TYPE_CCT,
	SENSOR_TYPE_FLICKER,
	SENSOR_TYPE_SARS,    // 101
	SENSOR_TYPE_AI_SHUTTER,
	SENSOR_TYPE_SUB_ACCELEROMETER,
	SENSOR_TYPE_SUB_GYROSCOPE,
	SENSOR_TYPE_REAR_PROXIMITY,
	SENSOR_TYPE_FOLD_HALL,
	SENSOR_TYPE_ANGLE_HALL,
	SENSOR_TYPE_FOLD_STATE,
	SENSOR_TYPE_HINGE_DETECT,
	SENSOR_TYPE_HOLSTER_HALL,
	SENSOR_TYPE_NORMAL_OIS,
	SENSOR_TYPE_REAR_SPECTRAL,
	SENSOR_TYPE_SUB_DEVICE_ORIENTATION,
	SENSOR_TYPE_PWM_RGB = 116,
	SENSOR_TYPE_OPLUS_RED_SCREEN_LIGHT,
	SENSOR_TYPE_AP_TIMER,
	SENSOR_TYPE_ELLIPTIC_FUSION, //ultrasnd proximity
	SENSOR_TYPE_DEBUG_KIT,      // please let DEBUG_KIT bottom
	SENSOR_TYPE_POCKET,
	SENSOR_TYPE_ULTRASOUND_PROX,
	SENSOR_TYPE_UI_DEVICE_ORIENTATION,
	SENSOR_TYPE_OIS1,
	SENSOR_TYPE_OIS2,
	SENSOR_TYPE_OIS3,
	SENSOR_TYPE_OIS_IMU,
	SENSOR_TYPE_FLICKER_REAR,
	SENSOR_TYPE_RGBW_REAR,
	SENSOR_TYPE_OPLUS_MEASUREMENT,
	SENSOR_TYPE_SHAKING_DETECT,
	SENSOR_TYPE_OPLUS_SLEEP,
	SENSOR_TYPE_OIS1_POWER,
	SENSOR_TYPE_OIS2_POWER,
	SENSOR_TYPE_FLIGHT_DETECT,
	SENSOR_TYPE_OPLUS_USND_PROX,
	SENSOR_TYPE_OPLUS_STATION_DETECT,
	SENSOR_TYPE_CHOP_DETECT,
#else
	SENSOR_TYPE_PICKUP_DETECT = 75,
	SENSOR_TYPE_FP_DISPLAY,
	SENSOR_TYPE_SAR_MODEM,
	SENSOR_TYPE_LUX_AOD,
	SENSOR_TYPE_PEDO_MINUTE,
	SENSOR_TYPE_SENSOR_MONITOR,
	SENSOR_TYPE_ELEVATOR_DETECT,
	SENSOR_TYPE_OPLUS_ACTIVITY_RECOGNITION,
	SENSOR_TYPE_OPLUS_STATION_DETECT,
	SENSOR_TYPE_BACK_TAP_DETECT,
	SENSOR_TYPE_ROTATION_DETECT,
	SENSOR_TYPE_FRONT_CCT = 95,
	SENSOR_TYPE_FRONT_FLICKER = 96,
	SENSOR_TYPE_RAW_MAG = 97,
	SENSOR_TYPE_REAR_ALS,
	SENSOR_TYPE_CCT,
	SENSOR_TYPE_FLICKER,
	SENSOR_TYPE_SARS,
	SENSOR_TYPE_AI_SHUTTER,
	SENSOR_TYPE_SUB_ACCELEROMETER,
	SENSOR_TYPE_SUB_GYROSCOPE,
	SENSOR_TYPE_REAR_PROXIMITY,
	SENSOR_TYPE_FOLD_HALL,
	SENSOR_TYPE_ANGLE_HALL,
	SENSOR_TYPE_FOLD_STATE,
	SENSOR_TYPE_HINGE_DETECT,
	SENSOR_TYPE_HOLSTER_HALL,
	SENSOR_TYPE_NORMAL_OIS,
	SENSOR_TYPE_REAR_SPECTRAL,
	SENSOR_TYPE_SUB_DEVICE_ORIENTATION,
	SENSOR_TYPE_GESTURE_PROX,
	SENSOR_TYPE_PHONE_PROX,
	SENSOR_TYPE_PWM_RGB,
	SENSOR_TYPE_OPLUS_RED_SCREEN_LIGHT,
	SENSOR_TYPE_AMBIENTE_PROX,
	SENSOR_TYPE_AP_TIMER,
	SENSOR_TYPE_ELLIPTIC_FUSION, //ultrasnd proximity
	SENSOR_TYPE_DEBUG_KIT,      // please let DEBUG_KIT bottom
	SENSOR_TYPE_POCKET,
	SENSOR_TYPE_ULTRASOUND_PROX,
	SENSOR_TYPE_UI_DEVICE_ORIENTATION,
	SENSOR_TYPE_FREE_FALL,
	SENSOR_TYPE_OIS1,
	SENSOR_TYPE_OIS2,
	SENSOR_TYPE_OIS3,
	SENSOR_TYPE_OIS_IMU,
	SENSOR_TYPE_FLICKER_REAR,
	SENSOR_TYPE_RGBW_REAR,
	SENSOR_TYPE_LAY_DETECT,
	SENSOR_TYPE_OPLUS_MEASUREMENT,
	SENSOR_TYPE_SHAKING_DETECT,
	SENSOR_TYPE_OPLUS_SLEEP,
	SENSOR_TYPE_OIS1_POWER,
	SENSOR_TYPE_OIS2_POWER,
	SENSOR_TYPE_FLIGHT_DETECT,
	SENSOR_TYPE_OPLUS_USND_PROX,
	SENSOR_TYPE_UNCALI_RAW_MAG,
	SENSOR_TYPE_CHOP_DETECT,
#endif
	SENSOR_TYPE_SENSOR_MAX,
};

enum {
	ID_OFFSET = 1,

	/* follow google default sensor type */
	ID_ACCELEROMETER = 0,
	ID_MAGNETIC_FIELD,
	ID_ORIENTATION,
	ID_GYROSCOPE,
	ID_LIGHT,
	ID_PRESSURE,
	ID_TEMPERATURE,
	ID_PROXIMITY,
	ID_GRAVITY,
	ID_LINEAR_ACCELERATION,
	ID_ROTATION_VECTOR,
	ID_RELATIVE_HUMIDITY,
	ID_AMBIENT_TEMPERATURE,
	ID_MAGNETIC_FIELD_UNCALIBRATED,
	ID_GAME_ROTATION_VECTOR,
	ID_GYROSCOPE_UNCALIBRATED,
	ID_SIGNIFICANT_MOTION,
	ID_STEP_DETECTOR,
	ID_STEP_COUNTER,
	ID_GEOMAGNETIC_ROTATION_VECTOR,
	ID_HEART_RATE,
	ID_TILT_DETECTOR,
	ID_WAKE_GESTURE,
	ID_GLANCE_GESTURE,
	ID_PICK_UP_GESTURE,
	ID_WRIST_TILT_GESTURE,
	ID_DEVICE_ORIENTATION,
	ID_POSE_6DOF,
	ID_STATIONARY_DETECT,
	ID_MOTION_DETECT,
	ID_HEART_BEAT,
	ID_DYNAMIC_SENSOR_META,
	ID_ADDITIONAL_INFO,
	ID_LOW_LATENCY_OFFBODY_DETECT,
	ID_ACCELEROMETER_UNCALIBRATED,

	/* follow mtk add sensor type */
	ID_PEDOMETER = SENSOR_TYPE_PEDOMETER - ID_OFFSET,
	ID_IN_POCKET,
	ID_ACTIVITY,
	ID_PDR,
	ID_FREEFALL,
	ID_FLAT,
	ID_FACE_DOWN,
	ID_SHAKE,
	ID_BRINGTOSEE,
	ID_ANSWER_CALL,
	ID_GEOFENCE,
	ID_FLOOR_COUNTER,
	ID_EKG,
	ID_PPG1,
	ID_PPG2,
	ID_RGBW,
	ID_GYRO_TEMPERATURE,
	ID_SAR,
	ID_OIS,
	ID_GYRO_SECONDARY,
	ID_FLICKER_REAR,
	ID_RGBW_REAR,
#ifdef CONFIG_OPLUS_FEATURE_SENSOR_ALGORITHM
	ID_OPLUS_VIRTUAL_SENSOR_START,    // virtual sensor start
	ID_CAMERA_PROTECT = SENSOR_TYPE_CAMERA_PROTECT - ID_OFFSET,
	ID_FREE_FALL = SENSOR_TYPE_FREE_FALL - ID_OFFSET,
	ID_PICKUP_DETECT = SENSOR_TYPE_PICKUP_DETECT - ID_OFFSET,
	ID_FP_DISPLAY = SENSOR_TYPE_FP_DISPLAY - ID_OFFSET,
	ID_SAR_MODEM = SENSOR_TYPE_SAR_MODEM - ID_OFFSET,
	ID_LUX_AOD = SENSOR_TYPE_LUX_AOD - ID_OFFSET,
	ID_PEDO_MINUTE = SENSOR_TYPE_PEDO_MINUTE - ID_OFFSET,
	ID_OPLUS_ACTIVITY_RECOGNITION = SENSOR_TYPE_OPLUS_ACTIVITY_RECOGNITION - ID_OFFSET,
	ID_ELEVATOR_DETECT = SENSOR_TYPE_ELEVATOR_DETECT - ID_OFFSET,
	ID_SENSOR_MONITOR = SENSOR_TYPE_SENSOR_MONITOR - ID_OFFSET,
	ID_BACK_TAP_DETECT = SENSOR_TYPE_BACK_TAP_DETECT - ID_OFFSET,
	ID_ROTATION_DETECT = SENSOR_TYPE_ROTATION_DETECT - ID_OFFSET,
	ID_LAY_DETECT = SENSOR_TYPE_LAY_DETECT - ID_OFFSET,
	ID_PALM_DETECT = SENSOR_TYPE_PALM_DETECT - ID_OFFSET,
	ID_PHONE_PROX = SENSOR_TYPE_PHONE_PROX - ID_OFFSET,
	ID_GESTURE_PROX = SENSOR_TYPE_GESTURE_PROX - ID_OFFSET,
	ID_AMBIENTE_PROX = SENSOR_TYPE_AMBIENTE_PROX - ID_OFFSET,
        ID_VIRTUAL_SENSOR_MAX,    // virtual sensor end
	ID_CCT = SENSOR_TYPE_FRONT_CCT - ID_OFFSET,
        ID_RAW_MAG = SENSOR_TYPE_RAW_MAG - ID_OFFSET,
	ID_REAR_ALS = SENSOR_TYPE_REAR_ALS - ID_OFFSET,
	ID_FLICKER = SENSOR_TYPE_FLICKER - ID_OFFSET,
	ID_SARS = SENSOR_TYPE_SARS - ID_OFFSET,
	ID_AI_SHUTTER = SENSOR_TYPE_AI_SHUTTER - ID_OFFSET,
	ID_PWM_RGB = SENSOR_TYPE_PWM_RGB - ID_OFFSET,
#endif
	ID_SENSOR_MAX,
};

enum {
	SENSOR_ACCURANCY_UNRELIALE,
	SENSOR_ACCURANCY_LOW,
	SENSOR_ACCURANCY_MEDIUM,
	SENSOR_ACCURANCY_HIGH,
};

#endif
